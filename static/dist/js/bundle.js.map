{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nnamespace = '/draftboard'; // change to an empty string to use the global namespace\nsocket = io.connect('http://' + document.domain + ':' + location.port + namespace);\n\nvar playerControl = require('./playerControl');\nvar newPlayer = require('./newPlayer');\nvar chatbox = require('./chatbox');\n\n$('.player').each(function() {\n    new playerControl(this);\n});\n\nchatbox.initialise();\nnewPlayer.initialise();\n\n},{\"./chatbox\":2,\"./newPlayer\":3,\"./playerControl\":4}],2:[function(require,module,exports){\nbroadcastMessage = function(msg) { socket.emit('broadcast_message:send', {'message': msg}); }\n\nvar chatboxControl = can.Control.extend({\n    init: function(el, opts) {\n        this.message = el.find('input.message-area');\n        socket.on('broadcast_message:receive', function(data) {\n            $('.messages').append('<p class=\"message\">'+data.message+'</p>');\n            $('.chatbox').animate({ scrollTop: $('.messages').height() });\n        });\n    },\n\n    ' submit': function(el, ev) {\n        ev.preventDefault();\n\n        if (this.message.val()) {\n            broadcastMessage(this.message.val());\n            this.message.val('');\n        }\n    },\n\n    '{toggle} click': function(el, ev) {\n        this.options.chatbox.toggleClass('hide');\n    }\n});\n\nmodule.exports = {\n    initialise: function() {\n        new chatboxControl('form.form__chatbox', {\n            toggle: $('.chatbox__toggle'),\n            chatbox: $('.chatbox')\n        });\n    }\n}\n\n},{}],3:[function(require,module,exports){\nvar playerControl = require('./playerControl');\n\ncreatePlayer = function(name) { socket.emit('create_player', {'name': name}); }\n\nsocket.on('response', function(data) {\n    var $player = $('[data-player-id=\"' + data.player_id + '\"]'),\n        life = $player.find('.life-counter');\n\n    life.text(data.life);\n\n    $player.find('.progress-radial').attr('class', 'progress-radial');\n\n    var lifePercentage = (parseInt(data.life) * 100) / 20;\n    lifePercentage = (lifePercentage < 1) ? 0 : lifePercentage;\n    $player.find('.progress-radial').addClass('progress-' + lifePercentage);\n});\n\nsocket.on('new_player', function(data) {\n    var frag = can.view('playerTemplate', data, {\n        testingFunc: function() {\n            return 'hi'\n        }\n    });\n    $('.players.row').append(frag);\n    new playerControl($('.players.row').find('.player').last());\n});\n\nvar addPlayerForm = can.Control.extend({\n    init: function(el, opts) {\n        this.name = el.find('input.name')\n    },\n\n    ' submit': function(el, ev) {\n        ev.preventDefault();\n\n        if (this.name.val()) {\n            createPlayer(this.name.val());\n            this.name.val('');\n        }\n    }\n});\n\n\nmodule.exports = {\n    initialise: function() {\n        new addPlayerForm('form.form__player');\n    }\n}\n\n\n\n\n\n},{\"./playerControl\":4}],4:[function(require,module,exports){\nloseLife = function(id, amount) { socket.emit('lose_life', {'player_id': id, amount: amount}); }\n\ngainLife = function(id, amount) { socket.emit('gain_life', {'player_id': id, amount: amount}); }\n\nvar playerControl = can.Control.extend({\n    init: function(el, opts) {\n        this.name = el.find('.player__name').text();\n        this._id = el.data('player-id');\n        this.life = parseInt(el.find('.life-counter').text());\n\n        var lifeClassFrag = (this.life * 100) / 20;\n        el.find('.progress-radial').addClass('progress-' + lifeClassFrag);\n    },\n\n    'button.fa-plus click': function(el, ev) {\n        gainLife(this._id, 1);\n    },\n\n    'button.fa-minus click': function(el, ev) {\n        loseLife(this._id, 1);\n    }\n});\n\nmodule.exports = playerControl;\n\n},{}]},{},[1]);\n"],"file":"bundle.js","sourceRoot":"/source/"}